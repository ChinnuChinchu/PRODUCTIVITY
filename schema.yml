openapi: 3.0.3
info:
  title: Django DRF Productivityapp
  version: 0.0.0
paths:
  /noteapp/adminforgot/:
    post:
      operationId: adminforgot_create
      tags:
      - adminforgot
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /noteapp/groups/:
    get:
      operationId: groups_retrieve
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: groups_create
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /noteapp/login/:
    post:
      operationId: login_create
      tags:
      - login
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /noteapp/memberships/:
    get:
      operationId: memberships_retrieve
      tags:
      - memberships
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: memberships_create
      tags:
      - memberships
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /noteapp/notes/:
    get:
      operationId: notes_list
      tags:
      - notes
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
          description: ''
    post:
      operationId: notes_create
      tags:
      - notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /noteapp/notes/{id}/:
    get:
      operationId: notes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notes
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: notes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notes
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: notes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notes
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /noteapp/notes/search/:
    get:
      operationId: notes_search_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notes
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
          description: ''
  /noteapp/register/:
    get:
      operationId: register_retrieve
      tags:
      - register
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: register_create
      tags:
      - register
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /noteapp/reset-password/:
    post:
      operationId: reset_password_create
      tags:
      - reset-password
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /noteapp/tasks/:
    get:
      operationId: tasks_list
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /noteapp/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /noteapp/todos/:
    get:
      operationId: todos_retrieve
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: todos_create
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /noteapp/todos/{id}/:
    get:
      operationId: todos_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: todos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: todos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        content:
          type: string
        categorize_note:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        favorite:
          type: boolean
        owner:
          type: integer
      required:
      - categorize_note
      - content
      - created_at
      - id
      - owner
      - title
      - updated_at
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        due_date:
          type: string
          format: date
        created_by:
          type: integer
        group:
          type: integer
      required:
      - content
      - created_at
      - created_by
      - due_date
      - group
      - id
      - title
      - updated_at
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
